use ReLU model
Network prediction: tensor([[ -2.1788,  -4.8912,  -0.2099,   0.3329,  -6.5422,  -1.6018, -11.8794,
           9.7545,  -2.4076,  -1.1615]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
Verifiying Pertubation - 0.028
CROWN pre-activation
CROWN pre-activation
using CROWN
result from CROWN is: tensor([[-3.6849,  1.3470, -4.6224, -6.1797,  3.1863, -4.6148,  3.5089, -5.8204,
         -4.2707]], device='cuda:0', grad_fn=<AddBackward0>)
using alpha-CROWN
result from alpha CROWN is: tensor([[-2.7275,  1.9696, -3.9074, -5.6776,  4.4663, -3.8401,  4.5039, -4.7792,
         -2.5932]], device='cuda:0', grad_fn=<MaximumBackward0>)
using alpha-beta-CROWN
size of unstable nuerons: 114

instance 0 is not verified with lb tensor([-2.7275], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]], device='cuda:0')

Bab round 1
batch: 1
split depth step: 7
split depth total: 7
when spliting:
lower_A torch.Size([1, 128, 784])
lower_sum_b torch.Size([1, 128])
upper_A torch.Size([1, 128, 784])
upper_sum_b torch.Size([1, 128])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-2.7275]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 1.9516e+00, 7.7423e-01, 0.0000e+00, 4.3270e-02, 0.0000e+00,
         7.3560e-02, 0.0000e+00, 0.0000e+00, 9.0381e-02, 0.0000e+00, 0.0000e+00,
         1.3767e-02, 6.6997e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.5857e-01, 2.1777e+00, 0.0000e+00, 3.4310e-02,
         0.0000e+00, 5.3953e-01, 0.0000e+00, 2.1424e+00, 0.0000e+00, 2.8016e-01,
         0.0000e+00, 4.8183e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         3.2671e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3300e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 1.8010e+00, 0.0000e+00, 0.0000e+00, 1.7466e-01,
         2.7842e+00, 0.0000e+00, 4.3483e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         4.8147e+00, 0.0000e+00, 0.0000e+00, 1.7466e-02, 0.0000e+00, 0.0000e+00,
         1.0712e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6137e-01, 0.0000e+00,
         0.0000e+00, 1.4059e+00, 0.0000e+00, 0.0000e+00, 5.2452e-05, 0.0000e+00,
         0.0000e+00, 6.4165e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3467e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3523e-03, 1.2922e+00, 0.0000e+00,
         3.5557e-01, 0.0000e+00, 1.0573e+00, 0.0000e+00, 0.0000e+00, 8.3750e-01,
         0.0000e+00, 0.0000e+00, 2.3142e+00, 0.0000e+00, 5.7304e-01, 0.0000e+00,
         4.7481e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         5.2202e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5226e+00,
         0.0000e+00, 2.9227e-01, 0.0000e+00, 0.0000e+00, 5.9573e+00, 0.0000e+00,
         1.9068e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.3073e-02, 4.5157e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
input split upper bound: tensor([[1.3371e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 7.4863e-05, 0.0000e+00, 0.0000e+00, 2.2004e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         1.9651e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2396e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 1.7635e-02, 0.0000e+00, 9.9270e-01, 0.0000e+00,
         8.9427e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6219e-04,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.3350e-03,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3196e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8359e-01, 1.5293e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7017e-01, 0.0000e+00, 4.2199e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8685e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1315e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.3582e-02, 0.0000e+00,
         0.0000e+00, 8.4054e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7667e+00, 0.0000e+00,
         3.1742e+00, 5.4046e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2848e-01, 1.6287e-01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.2121e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         1.1498e+00, 0.0000e+00, 9.2020e-02, 1.1559e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 2.6519e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 128]) torch.Size([1, 128])
bbbbbbbbbbbbbb torch.Size([1, 128])
when spliting:
lower_A torch.Size([1, 64, 784])
lower_sum_b torch.Size([1, 64])
upper_A torch.Size([1, 64, 784])
upper_sum_b torch.Size([1, 64])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-2.7275]], device='cuda:0')
input split lower bound: tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.3401, 0.0000, 0.0000, 0.0000,
         0.0000, 0.1878, 0.0000, 0.0000, 0.0000, 1.8015, 0.0000, 0.2120, 3.8348,
         0.0000, 0.3605, 0.0000, 0.4743, 0.0000, 2.6935, 0.2245, 0.0000, 0.0000,
         0.0000, 0.0000, 0.8702, 0.4194, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         1.9276, 0.0000, 0.0000, 0.8681, 1.1585, 0.0000, 0.2197, 0.0000, 0.0000,
         0.0000, 4.2962, 0.0000, 0.5268, 0.0000, 0.0000, 3.6174, 0.0000, 0.0000,
         0.8579]], device='cuda:0')
input split upper bound: tensor([[0.0000, 0.0000, 2.8812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.2506, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.3887, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 64]) torch.Size([1, 64])
bbbbbbbbbbbbbb torch.Size([1, 64])

instance 1 is verified with lb tensor([1.9696], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]], device='cuda:0')

instance 2 is not verified with lb tensor([-3.9074], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.]]], device='cuda:0')

Bab round 1
batch: 1
split depth step: 7
split depth total: 7
when spliting:
lower_A torch.Size([1, 128, 784])
lower_sum_b torch.Size([1, 128])
upper_A torch.Size([1, 128, 784])
upper_sum_b torch.Size([1, 128])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-3.9074]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 1.2552e+00, 9.6778e-01, 0.0000e+00, 3.7112e-01, 0.0000e+00,
         3.9517e-02, 0.0000e+00, 0.0000e+00, 1.2375e-01, 0.0000e+00, 0.0000e+00,
         4.7207e-01, 4.1153e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 8.1728e-01, 2.9989e+00, 0.0000e+00, 1.5709e-01,
         0.0000e+00, 2.3993e-01, 0.0000e+00, 2.4501e+00, 0.0000e+00, 2.4322e-01,
         1.7500e-04, 2.7887e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         4.4171e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.8205e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 2.2285e+00, 0.0000e+00, 0.0000e+00, 7.9824e-01,
         1.4577e+00, 0.0000e+00, 1.9192e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         5.2373e+00, 0.0000e+00, 0.0000e+00, 1.5830e-01, 0.0000e+00, 0.0000e+00,
         6.4622e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.2226e-01, 0.0000e+00,
         0.0000e+00, 1.2242e+00, 0.0000e+00, 0.0000e+00, 1.1171e-02, 0.0000e+00,
         0.0000e+00, 6.0600e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1929e+00,
         0.0000e+00, 9.4414e-05, 0.0000e+00, 2.8963e-02, 1.9591e+00, 0.0000e+00,
         7.6333e-01, 0.0000e+00, 5.9518e-01, 0.0000e+00, 0.0000e+00, 6.7152e-01,
         0.0000e+00, 0.0000e+00, 3.1563e+00, 0.0000e+00, 1.2149e-01, 0.0000e+00,
         2.7209e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         4.0115e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9278e+00,
         0.0000e+00, 4.2713e-01, 0.0000e+00, 0.0000e+00, 6.6279e+00, 0.0000e+00,
         9.8000e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6121e-01, 2.8634e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
input split upper bound: tensor([[0.1204, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0599,
         0.0000, 0.0000, 1.2806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         1.8166, 0.0000, 0.0000, 0.0000, 1.2557, 0.0000, 0.0000, 0.0000, 0.0697,
         0.0000, 0.5413, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1264,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1410, 0.0000, 0.0000, 0.0000,
         0.4814, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0397, 0.3381,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.4989, 0.0000, 1.0753, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 2.1060,
         0.0000, 0.0000, 0.0000, 3.7249, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0652, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 3.9883, 0.0000, 2.9577, 0.6802, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1068, 0.1031, 0.0000,
         0.0000, 0.0000, 0.3115, 0.0000, 0.0000, 0.0000, 1.2207, 0.0000, 0.0961,
         1.1752, 0.0000, 0.0000, 0.0000, 1.3105, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 128]) torch.Size([1, 128])
bbbbbbbbbbbbbb torch.Size([1, 128])
when spliting:
lower_A torch.Size([1, 64, 784])
lower_sum_b torch.Size([1, 64])
upper_A torch.Size([1, 64, 784])
upper_sum_b torch.Size([1, 64])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-3.9074]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 5.6896e-02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 1.1933e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 1.2301e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3511e+00,
         0.0000e+00, 1.0503e+00, 2.1402e+00, 0.0000e+00, 6.1535e-01, 0.0000e+00,
         1.0286e+00, 0.0000e+00, 5.2149e+00, 4.4472e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.6391e-02, 8.4109e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9423e+00, 0.0000e+00, 0.0000e+00,
         4.9030e-01, 1.0338e+00, 2.2971e-01, 0.0000e+00, 0.0000e+00, 9.0652e-03,
         0.0000e+00, 3.4846e+00, 8.4496e-04, 6.1859e-01, 0.0000e+00, 0.0000e+00,
         1.7910e+00, 0.0000e+00, 0.0000e+00, 1.0569e-01]], device='cuda:0')
input split upper bound: tensor([[0.0000e+00, 0.0000e+00, 1.6986e+00, 0.0000e+00, 0.0000e+00, 3.8147e-06,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4969e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3520e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.9952e-02, 0.0000e+00, 0.0000e+00]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 64]) torch.Size([1, 64])
bbbbbbbbbbbbbb torch.Size([1, 64])

instance 3 is not verified with lb tensor([-5.6776], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.]]], device='cuda:0')

Bab round 1
batch: 1
split depth step: 7
split depth total: 7
when spliting:
lower_A torch.Size([1, 128, 784])
lower_sum_b torch.Size([1, 128])
upper_A torch.Size([1, 128, 784])
upper_sum_b torch.Size([1, 128])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-5.6776]], device='cuda:0')
input split lower bound: tensor([[4.7684e-07, 1.5176e+00, 1.0995e+00, 0.0000e+00, 2.4146e-01, 0.0000e+00,
         1.4585e-01, 0.0000e+00, 4.7684e-07, 1.8833e-02, 0.0000e+00, 4.7684e-07,
         2.5579e-01, 9.7179e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 1.0148e+00, 3.8616e+00, 4.7684e-07, 2.2063e-01,
         0.0000e+00, 7.2433e-01, 4.7684e-07, 1.6708e+00, 4.7684e-07, 2.6495e-01,
         4.7684e-07, 3.0341e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07,
         5.6797e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.2933e+00, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 3.0171e+00, 4.7684e-07, 0.0000e+00, 5.6317e-01,
         2.5617e+00, 0.0000e+00, 7.9501e-02, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         4.1103e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00,
         2.2769e-01, 0.0000e+00, 0.0000e+00, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4371e-01, 4.7684e-07,
         0.0000e+00, 2.2138e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00,
         0.0000e+00, 9.0752e-01, 0.0000e+00, 0.0000e+00, 1.5882e-02, 1.8820e+00,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 1.4524e-01, 2.2419e+00, 0.0000e+00,
         7.1231e-01, 0.0000e+00, 7.2758e-01, 0.0000e+00, 4.7684e-07, 2.2719e-01,
         4.7684e-07, 4.7684e-07, 3.9016e+00, 0.0000e+00, 1.1987e-01, 0.0000e+00,
         3.3034e+00, 0.0000e+00, 0.0000e+00, 3.9959e-04, 4.7684e-07, 0.0000e+00,
         3.1628e+00, 0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 2.2004e+00,
         4.7684e-07, 8.0291e-01, 4.2472e-03, 4.7684e-07, 6.8057e+00, 0.0000e+00,
         1.9615e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 6.8035e-01, 2.4775e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
input split upper bound: tensor([[1.5494e-01, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 1.0014e-05, 4.7684e-07, 0.0000e+00, 2.5621e+00,
         4.7684e-07, 4.7684e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         2.9444e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 7.0153e-01, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 1.4364e-01, 4.7684e-07, 4.5715e-01, 4.7684e-07,
         6.6757e-06, 4.7684e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6492e-01,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 5.2343e-02,
         0.0000e+00, 0.0000e+00, 4.7684e-07, 9.2160e-02, 0.0000e+00, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00, 3.5626e-01, 2.4312e-01,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 2.5587e-03, 0.0000e+00, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 3.3760e-01, 0.0000e+00, 1.2479e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 2.0948e+00,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 3.1676e+00, 7.1526e-06, 0.0000e+00,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 1.8820e-02, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00, 3.4031e+00, 4.7684e-07,
         3.7310e+00, 1.1221e+00, 4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 5.5957e-02, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 7.4471e-01, 0.0000e+00, 0.0000e+00, 4.7684e-07,
         1.8759e+00, 4.7684e-07, 4.7684e-07, 5.9671e-01, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 1.6429e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 128]) torch.Size([1, 128])
bbbbbbbbbbbbbb torch.Size([1, 128])
when spliting:
lower_A torch.Size([1, 64, 784])
lower_sum_b torch.Size([1, 64])
upper_A torch.Size([1, 64, 784])
upper_sum_b torch.Size([1, 64])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-5.6776]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 2.6160e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 1.2479e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 3.0159e+00,
         0.0000e+00, 5.2263e-01, 3.7644e+00, 0.0000e+00, 1.9906e+00, 4.7684e-07,
         2.3242e+00, 0.0000e+00, 4.1194e+00, 2.8215e-02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.8721e-01, 2.5862e+00, 1.1333e-01, 4.7684e-07,
         4.7684e-07, 4.7684e-07, 0.0000e+00, 3.1721e+00, 0.0000e+00, 0.0000e+00,
         2.1407e+00, 1.7689e-01, 5.5790e-05, 2.2812e-01, 4.7684e-07, 2.7207e-01,
         0.0000e+00, 3.9926e+00, 4.7684e-07, 4.6813e-01, 4.7684e-07, 0.0000e+00,
         2.1330e+00, 4.7684e-07, 4.7684e-07, 2.1176e-02]], device='cuda:0')
input split upper bound: tensor([[0.0000e+00, 0.0000e+00, 3.5769e+00, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 6.4169e-01,
         0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07, 9.1951e-01,
         4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00,
         4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 2.3844e-01, 4.7684e-07, 4.7684e-07]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 64]) torch.Size([1, 64])
bbbbbbbbbbbbbb torch.Size([1, 64])

instance 4 is verified with lb tensor([4.4663], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.]]], device='cuda:0')

instance 5 is not verified with lb tensor([-3.8401], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.]]], device='cuda:0')

Bab round 1
batch: 1
split depth step: 7
split depth total: 7
when spliting:
lower_A torch.Size([1, 128, 784])
lower_sum_b torch.Size([1, 128])
upper_A torch.Size([1, 128, 784])
upper_sum_b torch.Size([1, 128])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-3.8401]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 3.4543e+00, 1.5655e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         8.1091e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         2.1370e-01, 5.2982e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.0547e-01, 1.4022e+00, 0.0000e+00, 8.0585e-05,
         0.0000e+00, 7.4080e-01, 0.0000e+00, 1.2509e+00, 0.0000e+00, 1.7548e-02,
         0.0000e+00, 5.7901e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         3.9365e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6945e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 3.8162e+00, 1.2329e-02, 0.0000e+00, 9.9126e-01,
         4.1728e+00, 0.0000e+00, 1.1889e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         5.2766e+00, 0.0000e+00, 0.0000e+00, 1.9512e-03, 0.0000e+00, 0.0000e+00,
         6.2829e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2959e-01, 0.0000e+00,
         0.0000e+00, 2.6251e+00, 0.0000e+00, 0.0000e+00, 2.0695e-02, 0.0000e+00,
         0.0000e+00, 1.7477e+00, 0.0000e+00, 0.0000e+00, 2.1941e-02, 2.8807e+00,
         0.0000e+00, 4.9925e-04, 0.0000e+00, 0.0000e+00, 1.6312e+00, 0.0000e+00,
         1.0857e+00, 0.0000e+00, 3.0523e-01, 0.0000e+00, 0.0000e+00, 2.8609e-01,
         0.0000e+00, 0.0000e+00, 2.4595e+00, 0.0000e+00, 6.6120e-01, 0.0000e+00,
         3.3992e+00, 0.0000e+00, 0.0000e+00, 1.8959e-03, 0.0000e+00, 0.0000e+00,
         5.8946e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0634e+00,
         0.0000e+00, 1.1736e+00, 0.0000e+00, 0.0000e+00, 5.7391e+00, 0.0000e+00,
         2.9403e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.6575e-02, 3.0817e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
input split upper bound: tensor([[1.7581e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2439e-05, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 5.4532e-02, 6.0654e-04, 0.0000e+00, 3.4193e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         3.5676e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4760e-01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 8.4400e-05, 0.0000e+00, 1.8418e+00, 0.0000e+00,
         1.9130e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 9.2722e-02,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3321e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.4538e-01, 4.7603e-03,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 4.9447e-01, 0.0000e+00, 4.0977e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6249e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4951e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6903e-02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7713e+00, 0.0000e+00,
         3.4467e+00, 1.3055e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4638e-01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.8865e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         1.2777e+00, 0.0000e+00, 4.2381e-03, 6.3439e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 2.8412e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 128]) torch.Size([1, 128])
bbbbbbbbbbbbbb torch.Size([1, 128])
when spliting:
lower_A torch.Size([1, 64, 784])
lower_sum_b torch.Size([1, 64])
upper_A torch.Size([1, 64, 784])
upper_sum_b torch.Size([1, 64])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-3.8401]], device='cuda:0')
input split lower bound: tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4222, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0166, 0.0000, 0.0000, 0.0000, 1.0090, 0.0000, 0.9208, 4.4793,
         0.0000, 1.2834, 0.0000, 2.6795, 0.0000, 2.0083, 0.2012, 0.0000, 0.0000,
         0.0000, 0.0000, 0.2658, 0.7095, 0.0997, 0.0000, 0.0000, 0.0000, 0.0000,
         3.9996, 0.0000, 0.0000, 0.7181, 2.2608, 0.0000, 1.3900, 0.0000, 0.0000,
         0.0000, 3.2775, 0.0000, 2.0608, 0.0000, 0.0000, 1.3416, 0.0000, 0.0000,
         1.5808]], device='cuda:0')
input split upper bound: tensor([[0.0000, 0.0000, 2.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0075, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.1935, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 64]) torch.Size([1, 64])
bbbbbbbbbbbbbb torch.Size([1, 64])

instance 6 is verified with lb tensor([4.5039], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]], device='cuda:0')

instance 7 is not verified with lb tensor([-4.7792], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.]]], device='cuda:0')

Bab round 1
batch: 1
split depth step: 7
split depth total: 7
when spliting:
lower_A torch.Size([1, 128, 784])
lower_sum_b torch.Size([1, 128])
upper_A torch.Size([1, 128, 784])
upper_sum_b torch.Size([1, 128])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-4.7792]], device='cuda:0')
input split lower bound: tensor([[4.7684e-07, 2.1422e+00, 1.9710e+00, 0.0000e+00, 9.5319e-02, 0.0000e+00,
         4.7106e-01, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         1.1912e-01, 9.2231e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 2.7002e-01, 2.3251e+00, 4.7684e-07, 2.6258e-02,
         0.0000e+00, 1.0373e+00, 4.7684e-07, 1.7923e+00, 4.7684e-07, 1.7540e-01,
         4.7684e-07, 4.4783e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07,
         4.0546e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4459e+00, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 3.1356e+00, 4.7684e-07, 0.0000e+00, 6.7412e-01,
         2.9308e+00, 0.0000e+00, 4.6563e-01, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         4.6720e+00, 0.0000e+00, 0.0000e+00, 2.3278e-02, 0.0000e+00, 0.0000e+00,
         4.3117e-01, 0.0000e+00, 0.0000e+00, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8127e-01, 4.7684e-07,
         0.0000e+00, 2.5340e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00,
         0.0000e+00, 4.9506e-01, 0.0000e+00, 0.0000e+00, 4.7684e-07, 2.7875e+00,
         0.0000e+00, 8.6451e-04, 0.0000e+00, 4.7684e-07, 1.4853e+00, 0.0000e+00,
         1.2208e+00, 0.0000e+00, 4.3518e-01, 0.0000e+00, 4.7684e-07, 8.7972e-01,
         4.7684e-07, 4.7684e-07, 2.5021e+00, 0.0000e+00, 4.5209e-01, 0.0000e+00,
         3.8947e+00, 0.0000e+00, 0.0000e+00, 5.0545e-05, 4.7684e-07, 0.0000e+00,
         5.4498e+00, 0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 3.7089e+00,
         4.7684e-07, 2.9883e-01, 4.7684e-07, 4.7684e-07, 5.7486e+00, 0.0000e+00,
         1.8261e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 1.6575e-01, 3.8533e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
input split upper bound: tensor([[6.2869e-02, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 1.2380e-02, 4.7383e-03, 0.0000e+00, 2.2870e+00,
         4.7684e-07, 4.7684e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         2.5728e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 7.8593e-01, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 2.4593e-01, 4.7684e-07, 9.9612e-01, 4.7684e-07,
         1.1993e-01, 4.7684e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.1992e-02,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 6.9731e-02,
         0.0000e+00, 0.0000e+00, 4.7684e-07, 1.0721e-01, 0.0000e+00, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00, 1.1467e-01, 8.9654e-02,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.9585e-01, 0.0000e+00, 6.4967e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 2.7724e+00,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 3.4153e+00, 6.1989e-06, 0.0000e+00,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 1.9847e-02, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 9.0504e-04, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00, 2.7308e+00, 4.7684e-07,
         3.6677e+00, 1.2259e+00, 4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 2.6372e-01, 0.0000e+00,
         4.7684e-07, 0.0000e+00, 2.4431e-01, 0.0000e+00, 0.0000e+00, 4.7684e-07,
         1.4419e+00, 4.7684e-07, 2.4137e-02, 8.9416e-01, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 2.8336e+00, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 128]) torch.Size([1, 128])
bbbbbbbbbbbbbb torch.Size([1, 128])
when spliting:
lower_A torch.Size([1, 64, 784])
lower_sum_b torch.Size([1, 64])
upper_A torch.Size([1, 64, 784])
upper_sum_b torch.Size([1, 64])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-4.7792]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 1.9369e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 1.5905e-01, 0.0000e+00, 0.0000e+00, 4.7684e-07, 2.4592e+00,
         0.0000e+00, 7.4503e-01, 3.3873e+00, 0.0000e+00, 1.1613e+00, 4.7684e-07,
         1.9398e+00, 0.0000e+00, 3.2307e+00, 1.7823e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 8.8725e-01, 1.4679e+00, 7.7529e-03, 4.7684e-07,
         4.7684e-07, 4.7684e-07, 0.0000e+00, 2.7389e+00, 0.0000e+00, 0.0000e+00,
         1.7862e+00, 1.2793e+00, 4.7684e-07, 5.4734e-01, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 2.9601e+00, 4.7684e-07, 1.2572e+00, 4.7684e-07, 0.0000e+00,
         1.8253e+00, 4.7684e-07, 4.7684e-07, 7.9598e-01]], device='cuda:0')
input split upper bound: tensor([[0.0000e+00, 0.0000e+00, 3.0195e+00, 4.7684e-07, 0.0000e+00, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07, 4.7684e-07,
         4.7684e-07, 0.0000e+00, 4.7684e-07, 4.7684e-07, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07, 1.1879e+00,
         4.7684e-07, 4.7684e-07, 0.0000e+00, 4.7684e-07, 0.0000e+00, 0.0000e+00,
         4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07,
         0.0000e+00, 4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07, 0.0000e+00,
         4.7684e-07, 4.7684e-07, 4.7684e-07, 4.7684e-07]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 64]) torch.Size([1, 64])
bbbbbbbbbbbbbb torch.Size([1, 64])

instance 8 is not verified with lb tensor([-2.5932], device='cuda:0', grad_fn=<SelectBackward0>) and C tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.]]], device='cuda:0')

Bab round 1
batch: 1
split depth step: 7
split depth total: 7
when spliting:
lower_A torch.Size([1, 128, 784])
lower_sum_b torch.Size([1, 128])
upper_A torch.Size([1, 128, 784])
upper_sum_b torch.Size([1, 128])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-2.5932]], device='cuda:0')
input split lower bound: tensor([[0.0000e+00, 3.1906e+00, 1.1353e+00, 0.0000e+00, 2.3335e-02, 0.0000e+00,
         3.7368e-01, 0.0000e+00, 6.9477e-02, 1.4114e-04, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 1.4012e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 8.1946e-02, 2.4776e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 1.9341e+00, 0.0000e+00, 2.0695e+00, 0.0000e+00, 1.5820e-01,
         0.0000e+00, 3.6390e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         3.0057e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0876e+00, 1.1415e-01,
         0.0000e+00, 0.0000e+00, 1.7078e+00, 0.0000e+00, 0.0000e+00, 3.1161e-03,
         2.5975e+00, 0.0000e+00, 5.6851e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         2.1473e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         5.2493e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.8380e-01, 0.0000e+00,
         0.0000e+00, 2.0900e+00, 0.0000e+00, 0.0000e+00, 1.8201e-03, 0.0000e+00,
         0.0000e+00, 3.1859e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3566e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.1741e-01, 0.0000e+00,
         9.3981e-02, 0.0000e+00, 1.1875e+00, 0.0000e+00, 0.0000e+00, 6.3664e-01,
         0.0000e+00, 0.0000e+00, 2.1119e+00, 0.0000e+00, 3.2539e-01, 0.0000e+00,
         4.3779e+00, 0.0000e+00, 0.0000e+00, 7.9908e-03, 0.0000e+00, 0.0000e+00,
         4.7023e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4279e+00,
         0.0000e+00, 2.6070e-01, 0.0000e+00, 0.0000e+00, 4.3736e+00, 0.0000e+00,
         2.4338e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1335e-01, 3.9929e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
input split upper bound: tensor([[2.9969e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5252e+00,
         6.2294e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         2.0731e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.1603e-01, 2.3842e-05,
         0.0000e+00, 0.0000e+00, 6.1221e-01, 0.0000e+00, 8.3296e-01, 0.0000e+00,
         2.6659e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.1795e-02,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2732e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8965e-01, 1.0080e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5580e-02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4803e-01, 0.0000e+00, 5.1170e-01,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4642e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3951e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6868e-02, 0.0000e+00,
         0.0000e+00, 4.5242e-02, 0.0000e+00, 1.2888e-02, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5474e+00, 0.0000e+00,
         2.7827e+00, 8.0797e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6049e-01, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 4.7460e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         1.7081e+00, 0.0000e+00, 3.8295e-02, 6.5956e-01, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 3.5962e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
         0.0000e+00, 0.0000e+00]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 128]) torch.Size([1, 128])
bbbbbbbbbbbbbb torch.Size([1, 128])
when spliting:
lower_A torch.Size([1, 64, 784])
lower_sum_b torch.Size([1, 64])
upper_A torch.Size([1, 64, 784])
upper_sum_b torch.Size([1, 64])
final_para_lower_A torch.Size([1, 1, 784])
final_para_lower_sum_b torch.Size([1, 1])
final_para_upper_A torch.Size([1, 1, 784])
final_para_upper_sum_b torch.Size([1, 1])
original bound: tensor([[-2.5932]], device='cuda:0')
input split lower bound: tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 2.5060, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0316, 0.0000, 0.0000, 0.0000, 2.2840, 0.0000, 0.0000, 3.2764,
         0.0000, 0.3941, 0.0000, 0.4146, 0.0000, 1.5377, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 2.7629, 0.6312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.4926, 0.0000, 0.0000, 3.1030, 0.2783, 0.0000, 1.2819, 0.0000, 0.0000,
         0.0000, 2.3812, 0.0000, 0.0915, 0.0000, 0.0000, 3.3092, 0.0000, 0.0000,
         1.4458]], device='cuda:0')
input split upper bound: tensor([[0.0000, 0.0000, 4.1155, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0721, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0001, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000]], device='cuda:0')
aaaaaaaaaaaaaaaaa: torch.Size([1, 1, 64]) torch.Size([1, 64])
bbbbbbbbbbbbbb torch.Size([1, 64])

all batches are verified!
