use ReLU model
Network prediction: tensor([[2., 0.]], device='cuda:0', grad_fn=<AddmmBackward0>)
Verifiying Pertubation - 1
the num of relu: 1
using beta-CROWN
tensor([[[ 1., -1.]]], device='cuda:0')
using alpha-CROWN
ret: tensor([[-1.]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.7000]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4060]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2940]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3594]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4032]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4310]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4463]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4517]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4490]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4398]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4251]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.4059]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3829]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3568]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3280]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2971]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2643]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3102]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3491]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.3407]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2965]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2584]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2758]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2875]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2942]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2965]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2949]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2900]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2822]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2718]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2592]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2660]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2747]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2552]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2624]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2721]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2780]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2805]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2800]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2769]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2715]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2641]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2550]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2670]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2727]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2568]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2590]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2668]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2715]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2736]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2734]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2711]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2670]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2614]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2544]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2612]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2654]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2528]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2580]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2641]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2679]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2696]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2694]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2676]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2645]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2601]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2547]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2549]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2581]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2506]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2521]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2521]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2508]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2553]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2503]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2551]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2584]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2602]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2606]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2598]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2579]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2551]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2515]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2585]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2602]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2523]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2545]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2582]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2605]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2615]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2616]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2607]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2590]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2566]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2536]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2501]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2616]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2645]], device='cuda:0', grad_fn=<AddBackward0>)
ret: tensor([[-0.2600]], device='cuda:0', grad_fn=<AddBackward0>)
after alpha: tensor([[-0.2501]], device='cuda:0', grad_fn=<MaximumBackward0>) tensor([[5.]], device='cuda:0', grad_fn=<MinimumBackward0>)
tensor(True, device='cuda:0')
True
True
name tensor([[-3., -3.]], device='cuda:0') tensor([[3., 3.]], device='cuda:0')
btemp torch.Size([2]) Parameter containing:
tensor([0., 0.], device='cuda:0', requires_grad=True)
ratio torch.Size([1, 1, 2]) tensor([[[ 1., -1.]]], device='cuda:0', grad_fn=<CloneBackward0>)
ratio_temp_0 torch.Size([1, 2]) tensor([[0.5000, 0.5000]], device='cuda:0')
ratio_temp_1 torch.Size([1, 2]) tensor([[1.5000, 1.5000]], device='cuda:0')
score: tensor([[0.0000, 1.5000]], device='cuda:0', grad_fn=<WhereBackward0>)
tensor([[[ 1., -1.]]], device='cuda:0')


C [(tensor([[-3., -3.]], device='cuda:0'), tensor([[3., 0.]], device='cuda:0'))]
split: [tensor([[0., 0.],
        [0., 1.]], device='cuda:0')]
name: 1
labels: tensor([0], device='cuda:0')
alpha_l
odict_values([Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.2497, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2401, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.2797, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2303, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.3091, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2207, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.3379, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2113, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.3662, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2020, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.3939, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1930, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.4210, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1842, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.4475, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1755, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.4736, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1670, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.4991, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1586, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.5241, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1505, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.5486, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1424, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.5727, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1346, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.5962, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-1.6193, device='cuda:0', grad_fn=<NegBackward0>)
Stored List
Alpha OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True))]))])
Beta OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))]))])
best_lb: tensor([[1.6193]], device='cuda:0', grad_fn=<MaximumBackward0>)
tensor([[[ 1., -1.]]], device='cuda:0')


C [(tensor([[-3.,  0.]], device='cuda:0'), tensor([[3., 3.]], device='cuda:0'))]
split: [tensor([[ 0.,  0.],
        [ 0., -1.]], device='cuda:0')]
name: 2
labels: tensor([0], device='cuda:0')
alpha_l
odict_values([Parameter containing:
tensor([[[0.2501, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.2497, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2601, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.2197, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2699, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.1903, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2795, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.1615, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2889, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.1333, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.2981, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.1056, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3072, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.0785, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3160, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.0519, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3247, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.0259, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3332, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.0004, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3416, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.0247, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3497, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.0492, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3577, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.0732, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3656, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.0967, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0.3733, 1.0000]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.1198, device='cuda:0', grad_fn=<NegBackward0>)
Stored List
Alpha OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0.3733, 1.0000]]], device='cuda:0', requires_grad=True))]))])
Beta OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))]))])
best_lb: tensor([[0.1198]], device='cuda:0', grad_fn=<MaximumBackward0>)
1 2
name tensor([[-3., -3.]], device='cuda:0') tensor([[3., 0.]], device='cuda:0')
btemp torch.Size([2]) Parameter containing:
tensor([0., 0.], device='cuda:0', requires_grad=True)
ratio torch.Size([1, 1, 2]) tensor([[[ 1., -1.]]], device='cuda:0', grad_fn=<CloneBackward0>)
ratio_temp_0 torch.Size([1, 2]) tensor([[0.5000, 0.0000]], device='cuda:0')
ratio_temp_1 torch.Size([1, 2]) tensor([[1.5000, 0.0000]], device='cuda:0')
score: tensor([[0., -inf]], device='cuda:0', grad_fn=<WhereBackward0>)
name tensor([[-3.,  0.]], device='cuda:0') tensor([[3., 3.]], device='cuda:0')
btemp torch.Size([2]) Parameter containing:
tensor([0., 0.], device='cuda:0', requires_grad=True)
ratio torch.Size([1, 1, 2]) tensor([[[ 1., -1.]]], device='cuda:0', grad_fn=<CloneBackward0>)
ratio_temp_0 torch.Size([1, 2]) tensor([[0.5000, 1.0000]], device='cuda:0')
ratio_temp_1 torch.Size([1, 2]) tensor([[1.5000, -0.0000]], device='cuda:0')
score: tensor([[0., -inf]], device='cuda:0', grad_fn=<WhereBackward0>)
tensor([[[ 1., -1.]]], device='cuda:0')


C [(tensor([[-3., -3.]], device='cuda:0'), tensor([[0., 0.]], device='cuda:0'))]
split: [tensor([[1., 0.],
        [0., 1.]], device='cuda:0')]
name: 3
labels: tensor([0], device='cuda:0')
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-2., device='cuda:0', grad_fn=<NegBackward0>)
Stored List
Alpha OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0.3733, 1.0000]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))]))])
Beta OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))]))])
best_lb: tensor([[2.]], device='cuda:0', grad_fn=<MaximumBackward0>)
tensor([[[ 1., -1.]]], device='cuda:0')


C [(tensor([[ 0., -3.]], device='cuda:0'), tensor([[3., 0.]], device='cuda:0'))]
split: [tensor([[-1.,  0.],
        [ 0.,  1.]], device='cuda:0')]
name: 4
labels: tensor([0], device='cuda:0')
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(1., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.0500, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.8500, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.0990, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.7030, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.1470, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.5589, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.1941, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.4178, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.2402, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.2794, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.2854, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.1438, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.3297, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.0109, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.3731, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.1193, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4156, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.2469, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4573, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3720, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4982, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4945, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5382, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.6146, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5774, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.7323, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.6159, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.8477, device='cuda:0', grad_fn=<NegBackward0>)
Stored List
Alpha OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0.3733, 1.0000]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (4, OrderedDict([(2, Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True))]))])
Beta OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (4, OrderedDict([(2, Parameter containing:
tensor([[[0.6159, 0.0000]]], device='cuda:0', requires_grad=True))]))])
best_lb: tensor([[0.8477]], device='cuda:0', grad_fn=<MaximumBackward0>)
tensor([[[ 1., -1.]]], device='cuda:0')


C [(tensor([[-3.,  0.]], device='cuda:0'), tensor([[0., 3.]], device='cuda:0'))]
split: [tensor([[ 1.,  0.],
        [ 0., -1.]], device='cuda:0')]
name: 5
labels: tensor([0], device='cuda:0')
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(1., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.0500, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.8500, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.0990, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.7030, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.1470, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.5589, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.1941, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.4178, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.2402, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.2794, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.2854, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.1438, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.3297, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(0.0109, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.3731, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.1193, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4156, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.2469, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4573, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3720, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4982, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4945, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5382, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4618, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5716, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4284, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5992, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4008, device='cuda:0', grad_fn=<NegBackward0>)
Stored List
Alpha OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0.3733, 1.0000]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (4, OrderedDict([(2, Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True))])), (5, OrderedDict([(2, Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True))]))])
Beta OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (4, OrderedDict([(2, Parameter containing:
tensor([[[0.6159, 0.0000]]], device='cuda:0', requires_grad=True))])), (5, OrderedDict([(2, Parameter containing:
tensor([[[0.4982, 0.0000]]], device='cuda:0', requires_grad=True))]))])
best_lb: tensor([[0.4945]], device='cuda:0', grad_fn=<MaximumBackward0>)
tensor([[[ 1., -1.]]], device='cuda:0')


C [(tensor([[0., 0.]], device='cuda:0'), tensor([[3., 3.]], device='cuda:0'))]
split: [tensor([[-1.,  0.],
        [ 0., -1.]], device='cuda:0')]
name: 6
labels: tensor([0], device='cuda:0')
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0., device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.0500, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.0500, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.0990, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.0990, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.1470, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.1470, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.1941, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.1941, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.2402, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.2402, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.2854, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.2854, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.3297, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3297, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.3731, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3731, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4156, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4156, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4573, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4573, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.4982, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.4982, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5382, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3854, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5525, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3425, device='cuda:0', grad_fn=<NegBackward0>)
alpha_l
odict_values([Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True)])
beta_l
odict_values([Parameter containing:
tensor([[[0.5529, 0.0000]]], device='cuda:0', requires_grad=True)])
loss: tensor(-0.3413, device='cuda:0', grad_fn=<NegBackward0>)
Stored List
Alpha OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0.2501, 0.0000]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0.1269, 0.0000]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0.3733, 1.0000]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (4, OrderedDict([(2, Parameter containing:
tensor([[[1., 0.]]], device='cuda:0', requires_grad=True))])), (5, OrderedDict([(2, Parameter containing:
tensor([[[0., 1.]]], device='cuda:0', requires_grad=True))])), (6, OrderedDict([(2, Parameter containing:
tensor([[[1., 1.]]], device='cuda:0', requires_grad=True))]))])
Beta OrderedDict([(0, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (1, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (2, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (3, OrderedDict([(2, Parameter containing:
tensor([[[0., 0.]]], device='cuda:0', requires_grad=True))])), (4, OrderedDict([(2, Parameter containing:
tensor([[[0.6159, 0.0000]]], device='cuda:0', requires_grad=True))])), (5, OrderedDict([(2, Parameter containing:
tensor([[[0.4982, 0.0000]]], device='cuda:0', requires_grad=True))])), (6, OrderedDict([(2, Parameter containing:
tensor([[[0.4982, 0.0000]]], device='cuda:0', requires_grad=True))]))])
best_lb: tensor([[0.4982]], device='cuda:0', grad_fn=<MaximumBackward0>)
2 4
f_0(x_0):   2.0000 <= f_0(x_0+delta) <=   2.0000
